name: Deploy To QA

on: [workflow_call]

env:
  COMMIT_AUTHOR: ${{ secrets.CI_COMMIT_AUTHOR }}
  COMMIT_EMAIL: ${{ secrets.CI_COMMIT_EMAIL }}
  JIRA_TOKEN: ${{ secrets.CI_JIRA_TOKEN }}

jobs:
  Deploy-to-QA:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github
        run: |
          git config --global user.name env.COMMIT_AUTHOR
          git config --global user.email env.COMMIT_EMAIL

      # - name: test curl
      #   env:
      #     JIRA_TOKEN: ${{ secrets.CI_JIRA_TOKEN }}
      #   uses: indiesdev/curl@v1.1
      #   with:
      #     url: https://appsflyer.atlassian.net/rest/api/3/project/11400/versions
      #     basic-auth-token: JIRA_TOKEN
      #     log-response: true
        # run: |
          # echo $(curl -X GET -v https://appsflyer.atlassian.net/rest/api/3/project/11400/versions --user amit.kremer@appsflyer.com:pTraQdT4R9RyfCTYFbwSE253)
          # lala='curl -X GET -H "Authorization: Basic $JIRA_TOKEN=" https://appsflyer.atlassian.net/rest/api/3/project/11400/versions'
          # echo $(eval $lala)
        
      - name: Check if fixed version is on Jira
        run: |
          # jira_token="$JIRA_TOKEN"
          echo "$JIRA_TOKEN  lalala" > la.txt
          cat la.txt
          ls -l
          jira_token="bWF4aW1AYXBwc2ZseWVyLmNvbTp3Nk1OaGJSYUZsZnNhMXBiOEZkdzU3MDU"
          fixed_version_found=false
          fixed_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9].[0-9]+')
          jira_fixed_version="React-Native SDK v$fixed_version"
          curl -X GET -H "Authorization: Basic $jira_token=" https://appsflyer.atlassian.net/rest/api/3/project/11400/versions | jq -r '.[] | .name+""+.id' | while read version ; do
            if [[ "$version" == *"$jira_fixed_version"* ]];then
              echo "${jira_fixed_version} Found!"
              fixed_version_found=true
              version_id=${version#"$jira_fixed_version"}
              echo -e $(curl -X GET -H "Authorization: Basic $jira_token=" https://appsflyer.atlassian.net/rest/api/3/search?jql=fixVersion=$version_id | jq -r '.issues[] |  .key + "-" + .fields["summary"]+"@"') > "$jira_fixed_version-releasenotes".txt
              sed -i -r -e "s/@/\n/gi" "$jira_fixed_version-releasenotes".txt
            fi
          done
          if [ fixed_version_found == false ];then
            echo "${jira_fixed_version} is not found!"
            exit 1
          fi
          cat "$jira_fixed_version-releasenotes".txt

      - name: Update package.json file
        run: |
          plugin_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9].[0-9]+-rc[0-9]+')
          echo "Updating plugin to version $plugin_version"
          npm version $plugin_version
          git push

      - name: Push to NPM
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: env.NPM_TOKEN
          dry-run: true
          tag: QA

      - name: Generate slack report
        run: | 
          echo slack report generated

      - name: Send slack report
        run: |
          echo slack report sent