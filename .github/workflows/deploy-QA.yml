name: Deploy To QA

on:
  workflow_call:

jobs:
  Deploy-to-QA:
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - uses: actions/checkout@v3
      - name: Login to Github
      - env:
          COMMIT_AUTHOR: ${{ secrets.CI_COMMIT_AUTHOR }}
          COMMIT_EMAIL: ${{ secrets.CI_COMMIT_EMAIL }}
        run: |
          git config --global user.name env.COMMIT_AUTHOR
          git config --global user.email env.COMMIT_EMAIL
        
      - name: Check if fixed version is on Jira
        env:
          JIRA_TOKEN: ${{ secrets.CI_JIRA_TOKEN }}
          BRANCH_NAME: ${{github.ref_name}}
        run: |
          fixed_version_found=false
          fixed_version=$(echo "$BRANCH_NAME" | grep -Eo '[0-9].[0-9].[0-9]+')
          jira_fixed_version="React-Native SDK v$fixed_version"
          echo "$jira_fixed_version"
          curl -X GET -H "Authorization: Basic $JIRA_TOKEN=" https://appsflyer.atlassian.net/rest/api/3/project/11400/versions | jq -r '.[] | .name+""+.id' | while read version ; do
            if [[ "$version" == *"$jira_fixed_version"* ]] ;then
              echo "$jira_fixed_version Found!"
              fixed_version_found=true
              version_id=${version#"$jira_fixed_version"}
              echo $(curl -X GET -H "Authorization: Basic $JIRA_TOKEN=" https://appsflyer.atlassian.net/rest/api/3/search?jql=fixVersion=$version_id | jq -r '.issues[] | "- " + .fields["summary"]+"@"') > "$jira_fixed_version-releasenotes".txt
              sed -i -r -e "s/@ /\n/gi" "$jira_fixed_version-releasenotes".txt
              sed -i -r -e "s/@/\n/gi" "$jira_fixed_version-releasenotes".txt
            fi
          done
          if [ fixed_version_found == false ];then
            echo "${jira_fixed_version} is not found!"
            exit 1
          fi
          cat "$jira_fixed_version-releasenotes".txt
         

      - name: Update package.json file
        run: |
          plugin_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9].[0-9]+-rc[0-9]+')
          echo "Updating plugin to version $plugin_version"
          npm version $plugin_version
          git push

      - name: Push to NPM
        env:
          CI_NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        uses: JS-DevTools/npm-publish@v1
        with:
          token: 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
          dry-run: true
          tag: "QA"

      - name: Generate slack report
        run: | 
          # iOS AppsFlyerSDK **v6.4.3**
          # Android AppsFlyerSDK **v6.4.3**
          ios_sdk_version=$(cat README.md | grep 'iOS AppsFlyerSDK \*\*v[0-9].[0-9].[0-9]\*\*')
          android_sdk_version=$(cat README.md | grep 'Android AppsFlyerSDK \*\*v[0-9].[0-9].[0-9]\*\*')
          fixed_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9].[0-9]+')
          jira_fixed_version="React-Native SDK v$fixed_version"
          plugin_version=$(echo "${{github.ref_name}}" | grep -Eo '[0-9].[0-9].[0-9]+-rc[0-9]+')
          CHANGES=$(cat "$jira_fixed_version-releasenotes".txt)
          REPORT=":react::react::react::react::react::react::react::react::react::react:\n
                \`$jira_fixed_version\` is published to *QA*\n
                *Branch:*\n \`${{github.ref_name}}\`\n
                \n
                Changes and fixes:\n
                $CHANGES
                \n
                *Installation:*\n
                :npm: \`npm install react-native-appsflyer@QA --save\`\n
                :github: \`npm install git://github.com/AppsFlyerSDK/appsflyer-react-native-plugin.git#${{github.ref_name}} --save\`\n
                \n
                *Source*:\n
                :npm:\`https://www.npmjs.com/package/react-native-appsflyer\'\n
                :github: \`https://github.com/AppsFlyerSDK/appsflyer-react-native-plugin\`\n
                \n
                *Dependencies:*\n
                :android:$android_sdk_version \n
                :ios:$ios_sdk_version \n
                :react::react::react::react::react::react::react::react::react::react:"
          echo "$REPORT"

      - name: Send slack report
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text": "Github-CI slack test"}'  https://hooks.slack.com/services/T02B3AJ9B/D01DTMB1Z6F/8s7zWbLHSdYG6TqdKV39xtxP